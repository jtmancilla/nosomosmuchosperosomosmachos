#geom_violin(alpha=0.5, color="gray")+
#geom_jitter(alpha=0.5, aes(color=names(df)[n]),
#            position = position_jitter(width = 0.1))+
geom_jitter()+
facet_wrap(as.formula(sprintf(' ~%s',names(df)[n]))) +
coord_flip() +
scale_y_continuous(labels=percent) +
theme(legend.position = "none")+
theme_solarized_2() +
ggtitle(paste(names(df)[count], " vs. ", names(df)[n]))+
annotation_custom(grobTree(textGrob(
paste("Q-25% = ",
as.vector(quantile(df[,count],na.rm=T)[2]),
",  Q-50% = ",
as.vector(quantile(df[,count],na.rm=T)[3]),
",  Q-75% =",as.vector
(quantile(df[,count],na.rm=T)[4])),
x=0.1,  y=0.97, hjust=0,
gp=gpar(col="black", fontsize=13,
fontface="italic"))))
}
plot(ggp)
}
}
else{
# si la viariable base es numerica:
for (count in ncol){
if(class(df[,count]) == "factor"){
ggp <-  ggplot(df, aes_string(x = names(df)[count],
y=names(df)[n])) +
#stat_density(aes(ymax = ..density..,
#ymin = -..density..,
#fill="gray"),
#color = names(df)[count]),
#geom = "ribbon", position = "identity") +
geom_violin(alpha=0.5, color="gray")+
geom_jitter(alpha=0.5, aes(color=names(df)[count]),
position = position_jitter(width = 0.1))+
#facet_wrap(as.formula(sprintf(' ~%s',
#names(df)[count])))+
theme_solarized_2() +
#scale_colour_solarized("blue")+
coord_flip() +
#scale_y_continuous(labels=percent) +
theme(legend.position = "none")+
ggtitle(paste(names(df)[n], " vs. ", names(df)[count]))
}
else{
ggp  <- ggplot(df,aes_string(x = names(df)[n], y = names(df)[count])) +
geom_smooth(method="lm", colour="darkred", se=F,level=0.90) +
geom_point(colour="steelblue") +
theme_economist()+
ggtitle(paste("correlación = ", round(cor(df[n],df[count], use="na.or.complete")[1],2)))
}
plot(ggp)
}
}
}
eda2(algas.data,1)
eda2  <-  function(df,n){
#df = datafrema, n= el numero de la columna con la covariable base
require(dplyr)
require(scales)
require(ggplot2)
require(gridExtra)
require(grid)
require(ggthemes)
ncol  <- 1:ncol(df)
ncol  <- ncol[-n]
# valiando si la covariable base es categorica o numérica
if (class(df[,n]) == "factor"){
# si es categorica aplicamos:
for (count in ncol){
if(class(df[,count]) == "factor"){
df2 <- as.data.frame(prop.table(table(df[,n],df[,count] )))
ggp <- ggplot(df2, aes(x=reorder(Var1,Freq), y=Freq)) +
geom_bar(stat='identity', fill="darkred",color="black") +
facet_wrap( ~ Var2)+
coord_flip()+
scale_y_continuous(labels=percent) +
theme_solarized_2() +
ggtitle(names(df)[count])+
xlab(names(df)[n])
}
else{
ggp <-  ggplot(df, aes_string(x = names(df)[count])) +
#y=names(df)[count])) +
stat_density(aes(ymax = ..density..,
ymin = -..density..,
fill=names(df)[n],color = names(df)[n]),
geom = "ribbon", position = "identity") +
#geom_violin(alpha=0.5, color="gray")+
#geom_jitter(alpha=0.5, aes(color=names(df)[n]),
#            position = position_jitter(width = 0.1))+
geom_jitter()+
facet_wrap(as.formula(sprintf(' ~%s',names(df)[n]))) +
coord_flip() +
scale_y_continuous(labels=percent) +
theme(legend.position = "none")+
theme_solarized_2() +
ggtitle(paste(names(df)[count], " vs. ", names(df)[n]))+
annotation_custom(grobTree(textGrob(
paste("Q-25% = ",
as.vector(quantile(df[,count],na.rm=T)[2]),
",  Q-50% = ",
as.vector(quantile(df[,count],na.rm=T)[3]),
",  Q-75% =",as.vector
(quantile(df[,count],na.rm=T)[4])),
x=0.1,  y=0.97, hjust=0,
gp=gpar(col="black", fontsize=13,
fontface="italic"))))
}
plot(ggp)
}
}
else{
# si la viariable base es numerica:
for (count in ncol){
if(class(df[,count]) == "factor"){
ggp <-  ggplot(df, aes_string(x = names(df)[count],
y=names(df)[n])) +
#stat_density(aes(ymax = ..density..,
#ymin = -..density..,
#fill="gray"),
#color = names(df)[count]),
#geom = "ribbon", position = "identity") +
geom_violin(alpha=0.5, color="gray")+
geom_jitter(alpha=0.5, aes(color=names(df)[count]),
position = position_jitter(width = 0.1))+
#facet_wrap(as.formula(sprintf(' ~%s',
#names(df)[count])))+
theme_solarized_2() +
#scale_colour_solarized("blue")+
coord_flip() +
#scale_y_continuous(labels=percent) +
theme(legend.position = "none")+
ggtitle(paste(names(df)[n], " vs. ", names(df)[count]))
}
else{
ggp  <- ggplot(df,aes_string(x = names(df)[n], y = names(df)[count])) +
geom_smooth(method="lm", colour="darkred", se=F,level=0.90) +
geom_point(colour="steelblue") +
theme_economist()+
ggtitle(paste("correlación = ", round(cor(df[n],df[count], use="na.or.complete")[1],2)))
}
plot(ggp)
}
}
}
eda2(algas.data,1)
eda2  <-  function(df,n){
#df = datafrema, n= el numero de la columna con la covariable base
require(dplyr)
require(scales)
require(ggplot2)
require(gridExtra)
require(grid)
require(ggthemes)
ncol  <- 1:ncol(df)
ncol  <- ncol[-n]
# valiando si la covariable base es categorica o numérica
if (class(df[,n]) == "factor"){
# si es categorica aplicamos:
for (count in ncol){
if(class(df[,count]) == "factor"){
df2 <- as.data.frame(prop.table(table(df[,n],df[,count] )))
ggp <- ggplot(df2, aes(x=reorder(Var1,Freq), y=Freq)) +
geom_bar(stat='identity', fill="darkred",color="black") +
facet_wrap( ~ Var2)+
coord_flip()+
scale_y_continuous(labels=percent) +
theme_solarized_2() +
ggtitle(names(df)[count])+
xlab(names(df)[n])
}
else{
ggp <-  ggplot(df, aes_string(x = names(df)[count])) +
#y=names(df)[count])) +
stat_density(aes(ymax = ..density..,
ymin = -..density..,
fill=names(df)[n],color = names(df)[n]),
geom = "ribbon", position = "identity") +
#geom_violin(alpha=0.5, color="gray")+
#geom_jitter(alpha=0.5, aes(color=names(df)[n]),
#            position = position_jitter(width = 0.1))+
#geom_jitter()+
facet_wrap(as.formula(sprintf(' ~%s',names(df)[n]))) +
coord_flip() +
scale_y_continuous(labels=percent) +
theme(legend.position = "none")+
theme_solarized_2() +
ggtitle(paste(names(df)[count], " vs. ", names(df)[n]))+
annotation_custom(grobTree(textGrob(
paste("Q-25% = ",
as.vector(quantile(df[,count],na.rm=T)[2]),
",  Q-50% = ",
as.vector(quantile(df[,count],na.rm=T)[3]),
",  Q-75% =",as.vector
(quantile(df[,count],na.rm=T)[4])),
x=0.1,  y=0.97, hjust=0,
gp=gpar(col="black", fontsize=13,
fontface="italic"))))
}
plot(ggp)
}
}
else{
# si la viariable base es numerica:
for (count in ncol){
if(class(df[,count]) == "factor"){
ggp <-  ggplot(df, aes_string(x = names(df)[count],
y=names(df)[n])) +
#stat_density(aes(ymax = ..density..,
#ymin = -..density..,
#fill="gray"),
#color = names(df)[count]),
#geom = "ribbon", position = "identity") +
geom_violin(alpha=0.5, color="gray")+
geom_jitter(alpha=0.5, aes(color=names(df)[count]),
position = position_jitter(width = 0.1))+
#facet_wrap(as.formula(sprintf(' ~%s',
#names(df)[count])))+
theme_solarized_2() +
#scale_colour_solarized("blue")+
coord_flip() +
#scale_y_continuous(labels=percent) +
theme(legend.position = "none")+
ggtitle(paste(names(df)[n], " vs. ", names(df)[count]))
}
else{
ggp  <- ggplot(df,aes_string(x = names(df)[n], y = names(df)[count])) +
geom_smooth(method="lm", colour="darkred", se=F,level=0.90) +
geom_point(colour="steelblue") +
theme_economist()+
ggtitle(paste("correlación = ", round(cor(df[n],df[count], use="na.or.complete")[1],2)))
}
plot(ggp)
}
}
}
eda2(algas.data,1)
corrplot(algas.data)
eda2  <-  function(df,n){
#df = datafrema, n= el numero de la columna con la covariable base
require(dplyr)
require(scales)
require(ggplot2)
require(gridExtra)
require(grid)
require(ggthemes)
ncol  <- 1:ncol(df)
ncol  <- ncol[-n]
# valiando si la covariable base es categorica o numérica
if (class(df[,n]) == "factor"){
# si es categorica aplicamos:
for (count in ncol){
if(class(df[,count]) == "factor"){
df2 <- as.data.frame(prop.table(table(df[,n],df[,count] )))
ggp <- ggplot(df2, aes(x=reorder(Var1,Freq), y=Freq)) +
geom_bar(stat='identity', fill="darkred",color="black") +
facet_wrap( ~ Var2)+
coord_flip()+
scale_y_continuous(labels=percent) +
theme_solarized_2() +
ggtitle(names(df)[count])+
xlab(names(df)[n])
}
else{
ggp <-  ggplot(df, aes_string(x = names(df)[count])) +
#y=names(df)[count])) +
stat_density(aes(ymax = ..density..,
ymin = -..density..,
fill=names(df)[n],color = names(df)[n]),
geom = "ribbon", position = "identity") +
#geom_violin(alpha=0.5, color="gray")+
geom_jitter(alpha=0.5, aes(color=names(df)[n]),
position = position_jitter(width = 0.1))+
facet_wrap(as.formula(sprintf(' ~%s',names(df)[n]))) +
coord_flip() +
scale_y_continuous(labels=percent) +
theme(legend.position = "none")+
theme_solarized_2() +
ggtitle(paste(names(df)[count], " vs. ", names(df)[n]))
# + annotation_custom(grobTree(textGrob(
#    paste("Q-25% = ",
#          as.vector(quantile(df[,count],na.rm=T)[2]),
#          ",  Q-50% = ",
#          as.vector(quantile(df[,count],na.rm=T)[3]),
#          ",  Q-75% =",as.vector
#          (quantile(df[,count],na.rm=T)[4])),
#    x=0.1,  y=0.97, hjust=0,
#    gp=gpar(col="black", fontsize=13,
#                    fontface="italic"))))
}
plot(ggp)
}
}
else{
# si la viariable base es numerica:
for (count in ncol){
if(class(df[,count]) == "factor"){
ggp <-  ggplot(df, aes_string(x = names(df)[count],
y=names(df)[n])) +
#stat_density(aes(ymax = ..density..,
#ymin = -..density..,
#fill="gray"),
#color = names(df)[count]),
#geom = "ribbon", position = "identity") +
geom_violin(alpha=0.5, color="gray")+
geom_jitter(alpha=0.5, aes(color=names(df)[count]),
position = position_jitter(width = 0.1))+
#facet_wrap(as.formula(sprintf(' ~%s',
#names(df)[count])))+
theme_solarized_2() +
#scale_colour_solarized("blue")+
coord_flip() +
#scale_y_continuous(labels=percent) +
theme(legend.position = "none")+
ggtitle(paste(names(df)[n], " vs. ", names(df)[count]))
}
else{
ggp  <- ggplot(df,aes_string(x = names(df)[n], y = names(df)[count])) +
geom_smooth(method="lm", colour="darkred", se=F,level=0.90) +
geom_point(colour="steelblue") +
theme_economist()+
ggtitle(paste("correlación = ", round(cor(df[n],df[count], use="na.or.complete")[1],2)))
}
plot(ggp)
}
}
}
eda2(algas.data,1)
eda2  <-  function(df,n){
#df = datafrema, n= el numero de la columna con la covariable base
require(dplyr)
require(scales)
require(ggplot2)
require(gridExtra)
require(grid)
require(ggthemes)
ncol  <- 1:ncol(df)
ncol  <- ncol[-n]
# valiando si la covariable base es categorica o numérica
if (class(df[,n]) == "factor"){
# si es categorica aplicamos:
for (count in ncol){
if(class(df[,count]) == "factor"){
df2 <- as.data.frame(prop.table(table(df[,n],df[,count] )))
ggp <- ggplot(df2, aes(x=reorder(Var1,Freq), y=Freq)) +
geom_bar(stat='identity', fill="darkred",color="black") +
facet_wrap( ~ Var2)+
coord_flip()+
scale_y_continuous(labels=percent) +
theme_solarized_2() +
ggtitle(names(df)[count])+
xlab(names(df)[n])
}
else{
ggp <-  ggplot(df, aes_string(x = names(df)[count])) +
#y=names(df)[count])) +
stat_density(aes(ymax = ..density..,
ymin = -..density..,
fill=names(df)[n],color = names(df)[n]),
geom = "ribbon", position = "identity") +
#geom_violin(alpha=0.5, color="gray")+
#geom_jitter(alpha=0.5, aes(color=names(df)[n]),
#            position = position_jitter(width = 0.1))+
facet_wrap(as.formula(sprintf(' ~%s',names(df)[n]))) +
coord_flip() +
scale_y_continuous(labels=percent) +
theme(legend.position = "none")+
theme_solarized_2() +
ggtitle(paste(names(df)[count], " vs. ", names(df)[n]))
# + annotation_custom(grobTree(textGrob(
#    paste("Q-25% = ",
#          as.vector(quantile(df[,count],na.rm=T)[2]),
#          ",  Q-50% = ",
#          as.vector(quantile(df[,count],na.rm=T)[3]),
#          ",  Q-75% =",as.vector
#          (quantile(df[,count],na.rm=T)[4])),
#    x=0.1,  y=0.97, hjust=0,
#    gp=gpar(col="black", fontsize=13,
#                    fontface="italic"))))
}
plot(ggp)
}
}
else{
# si la viariable base es numerica:
for (count in ncol){
if(class(df[,count]) == "factor"){
ggp <-  ggplot(df, aes_string(x = names(df)[count],
y=names(df)[n])) +
#stat_density(aes(ymax = ..density..,
#ymin = -..density..,
#fill="gray"),
#color = names(df)[count]),
#geom = "ribbon", position = "identity") +
geom_violin(alpha=0.5, color="gray")+
geom_jitter(alpha=0.5, aes(color=names(df)[count]),
position = position_jitter(width = 0.1))+
#facet_wrap(as.formula(sprintf(' ~%s',
#names(df)[count])))+
theme_solarized_2() +
#scale_colour_solarized("blue")+
coord_flip() +
#scale_y_continuous(labels=percent) +
theme(legend.position = "none")+
ggtitle(paste(names(df)[n], " vs. ", names(df)[count]))
}
else{
ggp  <- ggplot(df,aes_string(x = names(df)[n], y = names(df)[count])) +
geom_smooth(method="lm", colour="darkred", se=F,level=0.90) +
geom_point(colour="steelblue") +
theme_economist()+
ggtitle(paste("correlación = ", round(cor(df[n],df[count], use="na.or.complete")[1],2)))
}
plot(ggp)
}
}
}
eda2(algas.data,1)
eda2  <-  function(df,n){
#df = datafrema, n= el numero de la columna con la covariable base
require(dplyr)
require(scales)
require(ggplot2)
require(gridExtra)
require(grid)
require(ggthemes)
ncol  <- 1:ncol(df)
ncol  <- ncol[-n]
# valiando si la covariable base es categorica o numérica
if (class(df[,n]) == "factor"){
# si es categorica aplicamos:
for (count in ncol){
if(class(df[,count]) == "factor"){
df2 <- as.data.frame(prop.table(table(df[,n],df[,count] )))
ggp <- ggplot(df2, aes(x=reorder(Var1,Freq), y=Freq)) +
geom_bar(stat='identity', fill="darkred",color="black") +
facet_wrap( ~ Var2)+
coord_flip()+
scale_y_continuous(labels=percent) +
theme_solarized_2() +
ggtitle(names(df)[count])+
xlab(names(df)[n])
}
else{
ggp <-  ggplot(df, aes_string(x = names(df)[count])) +
#y=names(df)[count])) +
stat_density(aes(ymax = ..density..,
ymin = -..density..,
fill=names(df)[n],color = names(df)[n]),
geom = "ribbon", position = "identity") +
#geom_violin(alpha=0.5, color="gray")+
#geom_jitter(alpha=0.5, aes(color=names(df)[n]),
#            position = position_jitter(width = 0.1))+
facet_wrap(as.formula(sprintf(' ~%s',names(df)[n]))) +
#coord_flip() +
scale_y_continuous(labels=percent) +
theme(legend.position = "none")+
theme_solarized_2() +
ggtitle(paste(names(df)[count], " vs. ", names(df)[n]))
# + annotation_custom(grobTree(textGrob(
#    paste("Q-25% = ",
#          as.vector(quantile(df[,count],na.rm=T)[2]),
#          ",  Q-50% = ",
#          as.vector(quantile(df[,count],na.rm=T)[3]),
#          ",  Q-75% =",as.vector
#          (quantile(df[,count],na.rm=T)[4])),
#    x=0.1,  y=0.97, hjust=0,
#    gp=gpar(col="black", fontsize=13,
#                    fontface="italic"))))
}
plot(ggp)
}
}
else{
# si la viariable base es numerica:
for (count in ncol){
if(class(df[,count]) == "factor"){
ggp <-  ggplot(df, aes_string(x = names(df)[count],
y=names(df)[n])) +
#stat_density(aes(ymax = ..density..,
#ymin = -..density..,
#fill="gray"),
#color = names(df)[count]),
#geom = "ribbon", position = "identity") +
geom_violin(alpha=0.5, color="gray")+
geom_jitter(alpha=0.5, aes(color=names(df)[count]),
position = position_jitter(width = 0.1))+
#facet_wrap(as.formula(sprintf(' ~%s',
#names(df)[count])))+
theme_solarized_2() +
#scale_colour_solarized("blue")+
coord_flip() +
#scale_y_continuous(labels=percent) +
theme(legend.position = "none")+
ggtitle(paste(names(df)[n], " vs. ", names(df)[count]))
}
else{
ggp  <- ggplot(df,aes_string(x = names(df)[n], y = names(df)[count])) +
geom_smooth(method="lm", colour="darkred", se=F,level=0.90) +
geom_point(colour="steelblue") +
theme_economist()+
ggtitle(paste("correlación = ", round(cor(df[n],df[count], use="na.or.complete")[1],2)))
}
plot(ggp)
}
}
}
eda2(algas.data,1)
